{"version":3,"sources":["webpack:///node_modules/@angular/fire/__ivy_ngcc__/fesm2015/angular-fire-storage.js","webpack:///node_modules/firebase/storage/dist/index.esm.js","webpack:///src/app/pages/uploadimage/uploadimage.page.html","webpack:///src/app/pages/uploadimage/uploadimage-routing.module.ts","webpack:///src/app/pages/uploadimage/uploadimage.module.ts","webpack:///src/app/pages/uploadimage/uploadimage.page.scss","webpack:///src/app/pages/uploadimage/uploadimage.page.ts"],"names":["fromTask","task","subscriber","progress","snap","next","error","e","complete","on","cancel","AngularFireUploadTask","createUploadTask","inner$","then","bind","pause","resume","snapshotChanges","percentageChanges","pipe","s","bytesTransferred","totalBytes","AngularFireStorageReference","createStorageRef","ref","schedulers","keepUnstableUntilFirst","getDownloadURL","undefined","outsideAngular","getMetadata","child","path","updateMetadata","meta","put","data","metadata","putString","format","listAll","BUCKET","AngularFireStorage","options","nameOrConfig","storageBucket","platformId","zone","storage","runOutsideAngular","app","storageRef","ɵfac","AngularFireStorage_Factory","t","ctorParameters","type","decorators","args","Object","ɵprov","factory","token","providedIn","AngularFireStorageModule","ɵmod","ɵinj","AngularFireStorageModule_Factory","providers","routes","component","UploadimagePageRoutingModule","imports","forChild","exports","UploadimagePageModule","declarations","UploadimagePage","database","router","loading","authservice","isLoading","isLoaded","imageCollection","collection","imagefile","valueChanges","event","create","spinner","load","present","file","target","files","console","log","fileName","split","Date","getTime","name","fileRef","imageUpload","upload","dismiss","percentage","res","snapshot","downloadableUrl","doc","getUID","update","photoUrl","navigate","selector","template"],"mappings":"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","file":"pages-uploadimage-uploadimage-module-es5.js","sourcesContent":["import { Observable, of, from } from 'rxjs';\nimport { map, observeOn, switchMap } from 'rxjs/operators';\nimport { InjectionToken, Injectable, Inject, Optional, PLATFORM_ID, NgZone, ɵɵdefineInjectable, ɵɵinject, NgModule } from '@angular/core';\nimport { ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, ɵfirebaseAppFactory, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire';\nimport 'firebase/storage';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} task\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction fromTask(task) {\n    return new Observable((/**\n     * @param {?} subscriber\n     * @return {?}\n     */\n    subscriber => {\n        /** @type {?} */\n        const progress = (/**\n         * @param {?} snap\n         * @return {?}\n         */\n        (snap) => subscriber.next(snap));\n        /** @type {?} */\n        const error = (/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => subscriber.error(e));\n        /** @type {?} */\n        const complete = (/**\n         * @return {?}\n         */\n        () => subscriber.complete());\n        task.on('state_changed', progress, error, complete);\n        return (/**\n         * @return {?}\n         */\n        () => task.cancel());\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction AngularFireUploadTask() { }\nif (false) {\n    /** @type {?} */\n    AngularFireUploadTask.prototype.task;\n    /**\n     * @return {?}\n     */\n    AngularFireUploadTask.prototype.snapshotChanges = function () { };\n    /**\n     * @return {?}\n     */\n    AngularFireUploadTask.prototype.percentageChanges = function () { };\n    /**\n     * @return {?}\n     */\n    AngularFireUploadTask.prototype.pause = function () { };\n    /**\n     * @return {?}\n     */\n    AngularFireUploadTask.prototype.cancel = function () { };\n    /**\n     * @return {?}\n     */\n    AngularFireUploadTask.prototype.resume = function () { };\n    /**\n     * @param {?=} onFulfilled\n     * @param {?=} onRejected\n     * @return {?}\n     */\n    AngularFireUploadTask.prototype.then = function (onFulfilled, onRejected) { };\n    /**\n     * @param {?} onRejected\n     * @return {?}\n     */\n    AngularFireUploadTask.prototype.catch = function (onRejected) { };\n}\n/**\n * Create an AngularFireUploadTask from a regular UploadTask from the Storage SDK.\n * This method creates an observable of the upload and returns on object that provides\n * multiple methods for controlling and monitoring the file upload.\n * @param {?} task\n * @return {?}\n */\nfunction createUploadTask(task) {\n    /** @type {?} */\n    const inner$ = fromTask(task);\n    return {\n        task,\n        then: task.then.bind(task),\n        catch: task.catch.bind(task),\n        pause: task.pause.bind(task),\n        cancel: task.cancel.bind(task),\n        resume: task.resume.bind(task),\n        snapshotChanges: (/**\n         * @return {?}\n         */\n        () => inner$),\n        percentageChanges: (/**\n         * @return {?}\n         */\n        () => inner$.pipe(map((/**\n         * @param {?} s\n         * @return {?}\n         */\n        s => s.bytesTransferred / s.totalBytes * 100))))\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction AngularFireStorageReference() { }\nif (false) {\n    /**\n     * @return {?}\n     */\n    AngularFireStorageReference.prototype.getDownloadURL = function () { };\n    /**\n     * @return {?}\n     */\n    AngularFireStorageReference.prototype.getMetadata = function () { };\n    /**\n     * @return {?}\n     */\n    AngularFireStorageReference.prototype.delete = function () { };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    AngularFireStorageReference.prototype.child = function (path) { };\n    /**\n     * @param {?} meta\n     * @return {?}\n     */\n    AngularFireStorageReference.prototype.updateMetadata = function (meta) { };\n    /**\n     * @param {?} data\n     * @param {?=} metadata\n     * @return {?}\n     */\n    AngularFireStorageReference.prototype.put = function (data, metadata) { };\n    /**\n     * @param {?} data\n     * @param {?=} format\n     * @param {?=} metadata\n     * @return {?}\n     */\n    AngularFireStorageReference.prototype.putString = function (data, format, metadata) { };\n    /**\n     * @return {?}\n     */\n    AngularFireStorageReference.prototype.listAll = function () { };\n}\n/**\n * Create an AngularFire wrapped Storage Reference. This object\n * creates observable methods from promise based methods.\n * @param {?} ref\n * @param {?} schedulers\n * @param {?} keepUnstableUntilFirst\n * @return {?}\n */\nfunction createStorageRef(ref, schedulers, keepUnstableUntilFirst) {\n    return {\n        getDownloadURL: (/**\n         * @return {?}\n         */\n        () => of(undefined).pipe(observeOn(schedulers.outsideAngular), switchMap((/**\n         * @return {?}\n         */\n        () => ref.getDownloadURL())), keepUnstableUntilFirst)),\n        getMetadata: (/**\n         * @return {?}\n         */\n        () => of(undefined).pipe(observeOn(schedulers.outsideAngular), switchMap((/**\n         * @return {?}\n         */\n        () => ref.getMetadata())), keepUnstableUntilFirst)),\n        delete: (/**\n         * @return {?}\n         */\n        () => from(ref.delete())),\n        child: (/**\n         * @param {?} path\n         * @return {?}\n         */\n        (path) => createStorageRef(ref.child(path), schedulers, keepUnstableUntilFirst)),\n        updateMetadata: (/**\n         * @param {?} meta\n         * @return {?}\n         */\n        (meta) => from(ref.updateMetadata(meta))),\n        put: (/**\n         * @param {?} data\n         * @param {?=} metadata\n         * @return {?}\n         */\n        (data, metadata) => {\n            /** @type {?} */\n            const task = ref.put(data, metadata);\n            return createUploadTask(task);\n        }),\n        putString: (/**\n         * @param {?} data\n         * @param {?=} format\n         * @param {?=} metadata\n         * @return {?}\n         */\n        (data, format, metadata) => {\n            /** @type {?} */\n            const task = ref.putString(data, format, metadata);\n            return createUploadTask(task);\n        }),\n        listAll: (/**\n         * @return {?}\n         */\n        () => from(ref.listAll()))\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst BUCKET = new InjectionToken('angularfire2.storageBucket');\n/**\n * AngularFireStorage Service\n *\n * This service is the main entry point for this feature module. It provides\n * an API for uploading and downloading binary files from Cloud Storage for\n * Firebase.\n */\nclass AngularFireStorage {\n    /**\n     * @param {?} options\n     * @param {?} nameOrConfig\n     * @param {?} storageBucket\n     * @param {?} platformId\n     * @param {?} zone\n     */\n    constructor(options, nameOrConfig, storageBucket, \n    // tslint:disable-next-line:ban-types\n    platformId, zone) {\n        this.schedulers = new ɵAngularFireSchedulers(zone);\n        this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers);\n        this.storage = zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const app = ɵfirebaseAppFactory(options, zone, nameOrConfig);\n            return app.storage(storageBucket || undefined);\n        }));\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    ref(path) {\n        return createStorageRef(this.storage.ref(path), this.schedulers, this.keepUnstableUntilFirst);\n    }\n    /**\n     * @param {?} path\n     * @param {?} data\n     * @param {?=} metadata\n     * @return {?}\n     */\n    upload(path, data, metadata) {\n        /** @type {?} */\n        const storageRef = this.storage.ref(path);\n        /** @type {?} */\n        const ref = createStorageRef(storageRef, this.schedulers, this.keepUnstableUntilFirst);\n        return ref.put(data, metadata);\n    }\n}\nAngularFireStorage.ɵfac = function AngularFireStorage_Factory(t) { return new (t || AngularFireStorage)(ɵngcc0.ɵɵinject(FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(BUCKET, 8), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAngularFireStorage.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [FIREBASE_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FIREBASE_APP_NAME,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [BUCKET,] }] },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: NgZone }\n];\n/** @nocollapse */ AngularFireStorage.ɵprov = ɵɵdefineInjectable({ factory: function AngularFireStorage_Factory() { return new AngularFireStorage(ɵɵinject(FIREBASE_OPTIONS), ɵɵinject(FIREBASE_APP_NAME, 8), ɵɵinject(BUCKET, 8), ɵɵinject(PLATFORM_ID), ɵɵinject(NgZone)); }, token: AngularFireStorage, providedIn: \"any\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireStorage, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'any'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [FIREBASE_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FIREBASE_APP_NAME]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [BUCKET]\n            }] }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    AngularFireStorage.prototype.storage;\n    /** @type {?} */\n    AngularFireStorage.prototype.keepUnstableUntilFirst;\n    /** @type {?} */\n    AngularFireStorage.prototype.schedulers;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AngularFireStorageModule {\n}\nAngularFireStorageModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFireStorageModule });\nAngularFireStorageModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFireStorageModule_Factory(t) { return new (t || AngularFireStorageModule)(); }, providers: [AngularFireStorage] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireStorageModule, [{\n        type: NgModule,\n        args: [{\n                providers: [AngularFireStorage]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AngularFireStorage, AngularFireStorageModule, BUCKET, createStorageRef, createUploadTask, fromTask };\n\n//# sourceMappingURL=angular-fire-storage.js.map","import '@firebase/storage';\n//# sourceMappingURL=index.esm.js.map\n","export default \"<!DOCTYPE html>\\r\\n<ion-content>\\r\\n\\r\\n  <div class=\\\"containerWrap\\\">\\r\\n\\r\\n   <ion-button expand=\\\"full\\\" *ngIf=\\\"!isLoading  && !isLoaded\\\" class=\\\"ion-text-center\\\">\\r\\n     <ion-icon slot=\\\"start\\\" lazy=\\\"true\\\" name=\\\"image\\\"></ion-icon>\\r\\n     <input type=\\\"file\\\" (change)=\\\"uploadImagetoFirebase($event)\\\" id=\\\"file-input\\\"  accept=\\\"image/png, image/jpg\\\">\\r\\n   </ion-button>\\r\\n\\r\\n    <ion-card *ngIf=\\\"isLoading && !isLoaded\\\">\\r\\n      <ion-card-content *ngIf=\\\"percentage | async as percent\\\" class=\\\"ion-text-center\\\">\\r\\n       Progress: {{percent |  number}}%\\r\\n       <ion-progress-bar value=\\\"{{percent / 100}}\\\"></ion-progress-bar>\\r\\n         <button class=\\\"btn\\\" (click)=\\\"goToNextPage()\\\" style=\\\"\\\">Continue</button>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UploadimagePage } from './uploadimage.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UploadimagePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UploadimagePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { UploadimagePageRoutingModule } from './uploadimage-routing.module';\r\n\r\nimport { UploadimagePage } from './uploadimage.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    UploadimagePageRoutingModule\r\n  ],\r\n  declarations: [UploadimagePage]\r\n})\r\nexport class UploadimagePageModule {}\r\n","export default \"ion-content {\\n  --ion-background-color:#7e8e96;\\n}\\n\\n.containerWrap {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100%;\\n}\\n\\nion-button {\\n  --background:#444444;\\n}\\n\\n.btn {\\n  background-color: #333c50;\\n  text-align: center;\\n  color: #7e8e96;\\n  margin-top: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdXBsb2FkaW1hZ2UvdXBsb2FkaW1hZ2UucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksOEJBQUE7QUFBSjs7QUFHQTtFQUNJLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0EsWUFBQTtBQUFKOztBQUlBO0VBQ0ksb0JBQUE7QUFESjs7QUFJQTtFQUNNLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtBQUROIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdXBsb2FkaW1hZ2UvdXBsb2FkaW1hZ2UucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmlvbi1jb250ZW50e1xyXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjojN2U4ZTk2OyBcclxufVxyXG5cclxuLmNvbnRhaW5lcldyYXB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG5cclxufVxyXG5cclxuaW9uLWJ1dHRvbntcclxuICAgIC0tYmFja2dyb3VuZDojNDQ0NDQ0O1xyXG59XHJcblxyXG4uYnRue1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiMzMzNjNTA7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgY29sb3I6ICM3ZThlOTY7XHJcbiAgICAgIG1hcmdpbi10b3A6IDVweDtcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from '@angular/fire/firestore';\r\nimport {AngularFireStorage, AngularFireUploadTask} from '@angular/fire/storage'\r\nimport { Router } from '@angular/router';\r\nimport { LoadingController } from '@ionic/angular';\r\nimport { Observable } from 'rxjs';\r\nimport {finalize} from 'rxjs/operators'\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nexport interface imageData{\r\n  fileName: string;\r\n  filePath: string;\r\n  size: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-uploadimage',\r\n  templateUrl: './uploadimage.page.html',\r\n  styleUrls: ['./uploadimage.page.scss'],\r\n})\r\nexport class UploadimagePage implements OnInit {\r\n\r\n\r\n  fileName:string;\r\n  fileSize: string;\r\n  isLoading:boolean;\r\n  isLoaded: boolean;\r\n private imageCollection: AngularFirestoreCollection<imageData>;\r\n  imagefile: Observable<imageData[]>;\r\n  imageUpload: AngularFireUploadTask;\r\n  percentage: Observable<number>;\r\n  snapshot: Observable<any>;\r\n  FileImageUPload: Observable<any>;\r\n  UserUID: AngularFirestoreDocument;\r\n  constructor( private database: AngularFirestore, private storage: AngularFireStorage,\r\n    private router: Router, private loading :LoadingController, private authservice: AuthService\r\n    ) { \r\n\r\n    this.isLoading = false;\r\n    this.isLoaded = false;\r\n    this.imageCollection = this.database.collection<imageData>('loginUploads');\r\n    this.imagefile = this.imageCollection.valueChanges();\r\n  \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  async uploadImagetoFirebase(event){\r\n\r\n    const load = await this.loading.create({\r\n      spinner:'dots',\r\n    })\r\n      load.present();\r\n   \r\n    const file = event.target.files;\r\n    console.log(file);\r\n    var fileName = file[0];\r\n    console.log(fileName);\r\n\r\n    if(fileName.type.split('/')[0] !==\"image\" ){\r\n      console.error(\"File is not an Image\");\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    this.isLoaded = false;\r\n\r\n    const path =  `loginUploads/${new Date().getTime()}_${fileName.name}`;\r\n\r\n    var fileRef = this.storage.ref(path);\r\n\r\n    this.imageUpload = this.storage.upload(path,fileName);\r\n    this.loading.dismiss();\r\n\r\n    this.percentage = this.imageUpload.percentageChanges();\r\n\r\n    this.imageUpload.then( res=>{\r\n      var imagefile = res.task.snapshot.ref.getDownloadURL();\r\n      imagefile.then( downloadableUrl=>{\r\n        console.log(\"URL\", downloadableUrl);\r\n        this.database.doc(`profile/${this.authservice.getUID()}`).update({\r\n          photoUrl: downloadableUrl\r\n        });\r\n      })\r\n    })\r\n   \r\n    \r\n \r\n  }\r\n \r\n\r\n\r\n  goToNextPage(){\r\n    this.router.navigate(['tabs']);\r\n  }\r\n\r\n}\r\n"]}